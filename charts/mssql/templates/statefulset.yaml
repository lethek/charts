apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mssql.fullname" . }}
  labels:
    {{- include "mssql.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mssql.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mssql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "mssql.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mssql.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mssql
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: mssql
            initialDelaySeconds: {{ .Values.livenessprobe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessprobe.periodSeconds }}
          readinessProbe:
            tcpSocket:
              port: mssql
            initialDelaySeconds: {{ .Values.readinessprobe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessprobe.initialDelaySeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: TZ
            value: "{{ .Values.mssql.tz }}"
          - name: MSSQL_SA_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- if .Values.mssql.existingSecret }}
                name: {{ .Values.mssql.existingSecret }}
              {{- else }}
                name: {{ include "mssql.fullname" . }}-secret
              {{- end }}
                key: {{ .Values.mssql.saPasswordKey }}
          {{- if .Values.mssql.acceptEula }}
          - name: ACCEPT_EULA
            value: "{{ .Values.mssql.acceptEula }}"
          {{- end }}
          - name: MSSQL_PID
            value: "{{ .Values.mssql.edition }}"
          - name: MSSQL_TCP_PORT
            value: "{{ .Values.service.port }}"
          - name: MSSQL_DATA_DIR
            value: /var/opt/mssql/data
          - name: MSSQL_BACKUP_DIR
            value: /var/opt/mssql/backups
          - name: MSSQL_COLLATION
            value: "{{ .Values.mssql.collation }}"
          - name: MSSQL_LCID
            value: "{{ .Values.mssql.lcid }}"
          - name: MSSQL_ENABLE_HADR
            value: "{{ .Values.mssql.hadr }}"
          - name: MSSQL_AGENT_ENABLED
            value: {{ .Values.mssql.agent.enabled | quote }}
          {{ if .Values.resources.limits }}
          {{ if .Values.resources.limits.memory }}
          - name: MSSQL_MEMORY_LIMIT_MB
            valueFrom:
              resourceFieldRef:
                resource: limits.memory
                divisor: 1Mi
          {{ end }}
          {{ end }}
          volumeMounts:
          - name: data
            mountPath: /var/opt/mssql/data
          - name: backups
            mountPath: /var/opt/mssql/backups
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        - name: backups
          emptyDir: {}
        {{- else }}
        {{- if .Values.persistence.existingDataClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingDataClaim }}
        {{- end }}
        {{- if .Values.persistence.existingBackupsClaim }}
        - name: backups
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingBackupsClaim }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingDataClaim) }}
  - metadata:
      name: data
      annotations:
      {{- range $key, $value := .Values.persistence.annotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
    spec:
      accessModes:
      {{- range .Values.persistence.dataAccessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.dataSize | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingBackupsClaim) }}
  - metadata:
      name: backups
      annotations:
      {{- range $key, $value := .Values.persistence.annotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
    spec:
      accessModes:
      {{- range .Values.persistence.backupsAccessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.backupsSize | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
